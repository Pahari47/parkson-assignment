# Generated by Django 4.2.7 on 2025-07-27 09:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_code', models.CharField(help_text='Unique product code', max_length=50, unique=True)),
                ('product_name', models.CharField(help_text='Product name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Product description', null=True)),
                ('category', models.CharField(blank=True, help_text='Product category', max_length=100, null=True)),
                ('unit', models.CharField(default='PCS', help_text='Unit of measurement', max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Unit price', max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('is_active', models.BooleanField(default=True, help_text='Product status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Master',
                'verbose_name_plural': 'Product Masters',
                'db_table': 'prodmast',
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='StockMain',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_code', models.CharField(help_text='Unique transaction code', max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJUST', 'Stock Adjustment')], help_text='Type of transaction', max_length=10)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Transaction date and time')),
                ('reference_number', models.CharField(blank=True, help_text='External reference number', max_length=100, null=True)),
                ('supplier_customer', models.CharField(blank=True, help_text='Supplier or customer name', max_length=200, null=True)),
                ('notes', models.TextField(blank=True, help_text='Transaction notes', null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total transaction amount', max_digits=12, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('created_by', models.CharField(blank=True, help_text='User who created the transaction', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Stock Transaction',
                'verbose_name_plural': 'Stock Transactions',
                'db_table': 'stckmain',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='StockDetail',
            fields=[
                ('detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity moved', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price at time of transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this line item', max_digits=12, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('batch_number', models.CharField(blank=True, help_text='Batch or lot number', max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Expiry date if applicable', null=True)),
                ('notes', models.TextField(blank=True, help_text='Line item notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(help_text='Product in this transaction', on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.productmaster')),
                ('transaction', models.ForeignKey(help_text='Related stock transaction', on_delete=django.db.models.deletion.CASCADE, related_name='details', to='inventory.stockmain')),
            ],
            options={
                'verbose_name': 'Stock Detail',
                'verbose_name_plural': 'Stock Details',
                'db_table': 'stckdetail',
                'ordering': ['-created_at'],
            },
        ),
    ]
